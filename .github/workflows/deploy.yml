name: Deploy Discord Bot

on:
  push:
    branches:
      - main
      - develop

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set Docker image name
        id: set-image
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/discord-bot:latest" >> $GITHUB_ENV
            echo "CONTAINER_NAME=discord-bot" >> $GITHUB_ENV
          else
            echo "IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/discord-bot-dev:latest" >> $GITHUB_ENV
            echo "CONTAINER_NAME=discord-bot-dev" >> $GITHUB_ENV
          fi

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Set environment variables
        id: set-env
        run: |
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "TOKEN_NAME=DISCORD_TOKEN" >> $GITHUB_ENV
            echo "IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/discord-bot:latest" >> $GITHUB_ENV
            echo "CONTAINER_NAME=discord-bot" >> $GITHUB_ENV
          else
            echo "TOKEN_NAME=DISCORD_TOKEN_DEV" >> $GITHUB_ENV
            echo "IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/discord-bot-dev:latest" >> $GITHUB_ENV
            echo "CONTAINER_NAME=discord-bot-dev" >> $GITHUB_ENV
          fi

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            docker pull ${{ env.IMAGE_NAME }}
            docker stop ${{ env.CONTAINER_NAME }} || true
            docker rm ${{ env.CONTAINER_NAME }} || true
            docker run -d \
              --name ${{ env.CONTAINER_NAME }} \
              --restart unless-stopped \
              -e TOKEN=${{ secrets[env.TOKEN_NAME] }} \
              ${{ env.IMAGE_NAME }} 